// Generated by msgbuilder 2019-05-02 08:13:26 +0000

import RosTime

extension std_msgs {
	/// Standard metadata for higher-level stamped data types.
	/// This is generally used to communicate timestamped data 
	/// in a particular coordinate frame.
	/// 
	/// sequence ID: consecutively increasing ID 
	///Two-integer timestamp that is expressed as:
	/// * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
	/// * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
	/// time-handling sugar is provided by the client library
	///Frame this data is associated with
	/// 0: no frame
	/// 1: global frame
	public struct Header: Message {
		public static let md5sum: String = "2176decaecbce78abc3b96ef049fabed"
		public static let datatype = "std_msgs/Header"
		public static let definition = """
			# Standard metadata for higher-level stamped data types.
			# This is generally used to communicate timestamped data 
			# in a particular coordinate frame.
			# 
			# sequence ID: consecutively increasing ID 
			uint32 seq
			#Two-integer timestamp that is expressed as:
			# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
			# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
			# time-handling sugar is provided by the client library
			time stamp
			#Frame this data is associated with
			# 0: no frame
			# 1: global frame
			string frame_id
			"""

		public static let hasHeader = false

	
		public var seq: UInt32
		public var stamp: Time
		public var frame_id: String

		public init(seq: UInt32, stamp: Time, frame_id: String) {
			self.seq = seq
			self.stamp = stamp
			self.frame_id = frame_id
		}

		public init() {
			seq = UInt32()
			stamp = Time()
			frame_id = String()
		}
	}
}