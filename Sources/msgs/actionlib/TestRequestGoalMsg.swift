import Foundation
import StdMsgs
import RosTime


extension actionlib {
/// ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
public struct TestRequestGoal: Message {
public static var md5sum: String = "db5d00ba98302d6c6dd3737e9a03ceea"
public static var datatype = "actionlib/TestRequestGoal"
public static var definition = """
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 TERMINATE_SUCCESS = 0
int32 TERMINATE_ABORTED = 1
int32 TERMINATE_REJECTED = 2
int32 TERMINATE_LOSE = 3
int32 TERMINATE_DROP = 4
int32 TERMINATE_EXCEPTION = 5
int32 terminate_status
bool ignore_cancel  # If true, ignores requests to cancel
string result_text
int32 the_result    # Desired value for the_result in the Result
bool is_simple_client
duration delay_accept  # Delays accepting the goal by this amount of time
duration delay_terminate  # Delays terminating for this amount of time
duration pause_status  # Pauses the status messages for this amount of time
"""
public static var hasHeader = false

public let TERMINATE_SUCCESS: Int32 = 0
public let TERMINATE_ABORTED: Int32 = 1
public let TERMINATE_REJECTED: Int32 = 2
public let TERMINATE_LOSE: Int32 = 3
public let TERMINATE_DROP: Int32 = 4
public let TERMINATE_EXCEPTION: Int32 = 5
public var terminate_status: Int32
public var ignore_cancel: Bool
public var result_text: String
public var the_result: Int32
public var is_simple_client: Bool
public var delay_accept: RosTime.Duration
public var delay_terminate: RosTime.Duration
public var pause_status: RosTime.Duration

public init(terminate_status: Int32, ignore_cancel: Bool, result_text: String, the_result: Int32, is_simple_client: Bool, delay_accept: RosTime.Duration, delay_terminate: RosTime.Duration, pause_status: RosTime.Duration) {
self.terminate_status = terminate_status
self.ignore_cancel = ignore_cancel
self.result_text = result_text
self.the_result = the_result
self.is_simple_client = is_simple_client
self.delay_accept = delay_accept
self.delay_terminate = delay_terminate
self.pause_status = pause_status
}

public init() {
    terminate_status = Int32()
ignore_cancel = Bool()
result_text = String()
the_result = Int32()
is_simple_client = Bool()
delay_accept = RosTime.Duration()
delay_terminate = RosTime.Duration()
pause_status = RosTime.Duration()
}

}
}
