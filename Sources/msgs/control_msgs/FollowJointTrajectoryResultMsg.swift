import Foundation
import StdMsgs
import RosTime


extension control_msgs {
/// ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
/// Human readable description of the error code. Contains complementary
/// information that is especially useful when execution fails, for instance:
/// - INVALID_GOAL: The reason for the invalid goal (e.g., the requested
///   trajectory is in the past).
/// - INVALID_JOINTS: The mismatch between the expected controller joints
///   and those provided in the goal.
/// - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint
///   violated which tolerance, and by how much.
public struct FollowJointTrajectoryResult: Message {
public static var md5sum: String = "493383b18409bfb604b4e26c676401d2"
public static var datatype = "control_msgs/FollowJointTrajectoryResult"
public static var definition = """
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 error_code
int32 SUCCESSFUL = 0
int32 INVALID_GOAL = -1
int32 INVALID_JOINTS = -2
int32 OLD_HEADER_TIMESTAMP = -3
int32 PATH_TOLERANCE_VIOLATED = -4
int32 GOAL_TOLERANCE_VIOLATED = -5

# Human readable description of the error code. Contains complementary
# information that is especially useful when execution fails, for instance:
# - INVALID_GOAL: The reason for the invalid goal (e.g., the requested
#   trajectory is in the past).
# - INVALID_JOINTS: The mismatch between the expected controller joints
#   and those provided in the goal.
# - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint
#   violated which tolerance, and by how much.
string error_string
"""
public static var hasHeader = false

public var error_code: Int32
public let SUCCESSFUL: Int32 = 0
public let INVALID_GOAL: Int32 = -1
public let INVALID_JOINTS: Int32 = -2
public let OLD_HEADER_TIMESTAMP: Int32 = -3
public let PATH_TOLERANCE_VIOLATED: Int32 = -4
public let GOAL_TOLERANCE_VIOLATED: Int32 = -5
public var error_string: String

public init(error_code: Int32, error_string: String) {
self.error_code = error_code
self.error_string = error_string
}

public init() {
    error_code = Int32()
error_string = String()
}

}
}
